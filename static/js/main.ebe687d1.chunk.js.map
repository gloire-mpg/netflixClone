{"version":3,"sources":["axiox.js","Row.js","request.js","Banner.js","Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLarge","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","console","log","className","map","movie","onClick","movieTrailer","name","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","alert","message","handleClick","key","id","src","poster_path","backdrop_path","alt","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOrginals","fetchTopRated","fetchActionMovie","fetchComedyMovie","fetchHorrorMovie","fetchRomanceMovie","fetchDocumentaries","Banner","str","num","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","overview","slice","Nav","show","setShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebe687d1.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\"\n})\n\nexport default instance;","import React,{useState,useEffect} from 'react';\nimport './row.css';\nimport axios from './axiox';\nimport Youtube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\n// const base_url = \"https://image.tmdb.org/t/p/orginal/\"\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\nconst Row = ({title,fetchUrl,isLarge}) => {\n    const [movies,setMovies] = useState([]);\n    const [trailerUrl,setTrailerUrl] = useState(\"\");\n\n    const opts = {\n        height : \"390\",\n        width : \"100%\",\n        playerVars:{\n             // https://developers.google.com/youtube/player_parameters\n            autoplay : 1,\n        }\n    }\n\n    useEffect(() =>{\n        const fetchData = async () => {\n            const request = await axios.get(fetchUrl)\n            setMovies(request.data.results)\n            return request\n        }\n        fetchData();\n    },[fetchUrl])\n    \n     const handleClick = (movie) =>{\n         console.log(movie)\n         if(trailerUrl){\n             setTrailerUrl(\"\");\n         }else{\n             movieTrailer(movie?.name || movie?.title || movie?.original_name ||\" \")\n             .then(url =>{\n                 const urlParams = new URLSearchParams(new URL(url).search);\n                 console.log(urlParams)\n                 setTrailerUrl(urlParams.get('v'));\n             })\n             .catch((error) => alert(error.message))\n         }\n     }\n     console.log(trailerUrl)\n    return (\n        <div className=\"row\">\n            <h1>{title}</h1>\n            <div className=\"row__posters\">\n               {movies.map(movie =>(\n                   <img \n                       onClick={() =>handleClick(movie)}\n                       className={`row__poster ${isLarge && 'row__posterLarge'}`}\n                       key={movie.id}\n                       src={`${base_url}${isLarge ? movie.poster_path : movie.backdrop_path}`}\n                       alt={movie.name}\n                   />\n               ))}\n            </div>\n            {trailerUrl ? (<Youtube videoId={trailerUrl} opts={opts}/>) : null}\n        </div>\n    )\n}\n\nexport default Row;\n","//502bb6b691d0e8e042209135257732be\n//https://api.themoviedb.org/3/movie/550?api_key=502bb6b691d0e8e042209135257732be\n\n\nconst API_KEY = '502bb6b691d0e8e042209135257732be'\n\n\nconst requests = {\n    fetchTrending :`/trending/all/week?api_key=${API_KEY}&language=en-us`,\n    fetchNetflixOrginals : `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated : `/movie/top_rated?api_key=${API_KEY}&language=en-us`,\n    fetchActionMovie : `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovie : `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovie : `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovie : `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries : `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests;","import React,{useState,useEffect} from 'react';\nimport './banner.css';\nimport axios from './axiox';\nimport request from './request';\n\n\nconst Banner = () => {\n    const [movie,setMovie] = useState([]);\n    const fetchUrl = request.fetchNetflixOrginals;\n    useEffect(()=>{\n        const fetchData = async () =>{\n            const request = await axios.get(fetchUrl)\n            setMovie(request.data.results[Math.floor(Math.random() * (request.data.results.length -1))])\n        }\n        fetchData()\n    },[fetchUrl])\n\n    function truncateString(str, num) {\n        if (str?.length > num) {\n          return str.slice(0, num) + \"...\";\n        } else {\n          return str;\n        }\n      }\n    return (\n        <header \n        className=\"banner\"\n        style={{\n            backgroundSize:\"cover\",\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n            backgroundPosition: \"center center\",\n        }}\n        >\n        <h1 className=\"banner__title\">{movie.name}</h1>\n        <div className=\"banner__button\">\n            <button>Play</button>\n            <button>My List</button>\n        </div>\n        <h1 className=\"banner__description\">{truncateString(movie?.overview,150)}</h1>\n        <div className=\"foot__bar\">\n\n        </div>\n        </header>\n    )\n}\n\nexport default Banner;\n","import React,{useEffect,useState} from 'react';\nimport './nav.css';\n\nconst Nav = () => {\n    const [show,setShow] = useState(false);\n    useEffect(()=>{\n        window.addEventListener(\"scroll\",() =>{\n            if(window.scrollY > 100){\n                setShow(true)\n            }else{\n                setShow(false)\n            }\n        })\n        return () =>{\n            window.removeEventListener('scroll');\n        }\n    },[])\n    return (\n        <div className={`nav ${show && 'nav__black'}`}>\n            <img \n                className=\"nav__logo\"\n                src=\"https://image.tmdb.org/t/p/original/wwemzKWzjKYJFfCeiB57q3r4Bcm.svg\"\n                alt=\"netflix\"\n            />\n            <img \n                className=\"nav__avatar\"\n                src=\"https://www.svgrepo.com/show/57853/avatar.svg\"\n                alt=\"netflix\"\n            />\n        </div>\n    )\n}\n\nexport default Nav;\n","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './request';\nimport Banner from './Banner';\nimport Nav from './Nav'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      {/* banner */}\n      <Banner />\n      <Row title=\"NetflixOrginal\" fetchUrl={requests.fetchNetflixOrginals} isLarge/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movie\" fetchUrl={requests.fetchActionMovie}/>\n      <Row title=\"Comedy Movie\" fetchUrl={requests.fetchComedyMovie}/>\n      <Row title=\"Horror Movie\" fetchUrl={requests.fetchHorrorMovie}/>\n      <Row title=\"Romance Movie\" fetchUrl={requests.fetchRomanceMovie}/>\n      <Row title=\"Documantries\" fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}